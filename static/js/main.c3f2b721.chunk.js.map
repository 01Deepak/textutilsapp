{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","className","style","id","type","Navbar","to","title","aboutText","onClick","toggleMode","height","width","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","length","newText","toUpperCase","showAlert","toLowerCase","split","filter","trim","defaultProps","Alert","msgtype","role","word","lower","charAt","slice","CapitlizeFirstLetter","msg","App","setmode","alert","setAlert","message","setTimeout","romoveBodyClass","document","body","classList","remove","colorName","add","console","log","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c3f2b721.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    // let style={\r\n    //     color:'white',\r\n    //     backgroundColor:'black'\r\n    // }\r\n\r\n      // Declare a new state variable\r\n  \r\n// const [myStyle, setmyStyle] = useState({\r\n// backgroundColor:`${props.mode==='light'?\"white\":\"black\"}`,\r\n// color:`${props.mode==='light'?\"black\":\"white\"}`\r\n// });\r\n\r\nlet myStyle={\r\n  color:props.mode==='light'?'black':'white',\r\n  backgroundColor:props.mode==='light'?'white':'black'\r\n}\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"container\" style={myStyle}>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\"  style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n        </li>\r\n       \r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\">Disabled</a>\r\n        </li> */}\r\n      </ul>\r\n      <div className=\"d-flex\">\r\n      \r\n          <div className=\"bg-primary rounded mx-2\"  onClick={()=>props.toggleMode(\"primary\")} style={{height:'18px',width:'18px'}}></div>\r\n      <div className=\"bg-warning rounded mx-2\" onClick={()=>props.toggleMode(\"warning\")} style={{height:'18px',width:'18px'}}></div>\r\n      <div className=\"bg-success rounded mx-2\" onClick={()=>props.toggleMode(\"success\")} style={{height:'18px',width:'18px'}}></div>\r\n      <div className=\"bg-danger rounded mx-2\" onClick={()=>props.toggleMode(\"danger\")} style={{height:'18px',width:'18px'}}></div>\r\n         \r\n     \r\n        </div>\r\n\r\n      <div className=\"form-check form-switch\">\r\n  <input className=\"form-check-input\"  onClick={()=>props.toggleMode(null)} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className={`form-check-label ${props.mode==='light'?'text-dark':'text-light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n     \r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    aboutText:PropTypes.string\r\n  };\r\n\r\n  // Specifies the default values for props:\r\nNavbar.defaultProps = {\r\n    title: 'Set Title Here',\r\n    aboutText:'Set aboutText Here'\r\n  };\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick =()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"success\",\"Upper case has been enabled.\");\r\n    }\r\n\r\n    const handleLowerClick=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"success\",\"Lower case has been enabled.\");\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        // console.log(\"handle on change was Clicked\");\r\n        \r\n        setText(event.target.value);\r\n    }\r\n\r\n    const clear = ()=>{\r\n      setText(\"\");\r\n      props.showAlert(\"success\",\"All data has been cleared.\");\r\n    }\r\n      // Declare a new state variable, which we'll call \"count\"\r\n  const [text, setText] = useState(\"Enter text here\");\r\n  \r\n    return (\r\n        <>\r\n      <div className={props.mode==='light'?'text-black':'text-white'}>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"textarea\" className=\"form-label\"><h3>{props.heading}</h3></label>\r\n        <textarea value={text} onChange={handleOnChange} className={`form-control ${props.mode==='light'?'bg-light  text-black':'bg-dark text-white'}`} id=\"textarea\" rows=\"8\"></textarea>\r\n       \r\n      </div>\r\n      <div className=\"mx-1\">\r\n      <button type=\"button\" className={`btn btn-primary mx-1 my-1 ${text.length===0?'disabled':''} `} onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button type=\"button\" className={`btn btn-primary mx-1 my-1 ${text.length===0?'disabled':''} `} onClick={handleLowerClick}>Convert to Lowercase</button>\r\n        <button type=\"button\" className={`btn btn-primary mx-1 my-1 ${text.length===0?'disabled':''} `} onClick={clear}>Clear</button>\r\n      </div>\r\n     <h3>Your Text Summary</h3>\r\n     <p>{text.split(/\\s+/).filter((text)=>{return text.length !== 0}).length} words and {text.trim().length} charachers</p>\r\n     <h3>Preview</h3>\r\n     <p>{text.length>0?text:'Enter something in the textbox above to preview it here.'}</p>\r\n      </div>\r\n  \r\n      </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n  const CapitlizeFirstLetter=(word)=>{\r\n   const lower=word.toLowerCase();\r\n   return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n\r\n    return (\r\n        props.Alert  && <div className={`alert alert-${props.Alert.msgtype} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{CapitlizeFirstLetter(props.Alert.msgtype)}</strong> : {props.Alert.msg}\r\n        \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import { Router } from 'react-router';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  \n} from \"react-router-dom\";\n\n\nfunction App() {\nconst [mode, setmode] = useState('light');\n \nconst [alert, setAlert] = useState(null);\n\nconst showAlert=(type,message)=>{\n  setAlert({\n    msg:message,\n    msgtype:type\n  })\n  setTimeout(()=>{\n   setAlert(null);\n  },1500);\n}\n\nconst toggleMode=(colorName)=>{\n  romoveBodyClass();\n document.body.classList.add('bg-'+colorName);\n  console.log(colorName);\n  // alert(\"toggle mode fired\");\n  if (mode==='light') {\n    setmode('dark');\n    document.body.style.backgroundColor='black';\n    showAlert(\"success\",\"Dark mode Enabled\");\n  }\n  else{\n    setmode('light');\n    document.body.style.backgroundColor='white';\n    showAlert(\"success\",\"Light mode Enabled\");\n  }\n \n}\n\nconst romoveBodyClass=()=>{\ndocument.body.classList.remove(\"bg-primary\");\ndocument.body.classList.remove(\"bg-danger\");\ndocument.body.classList.remove(\"bg-success\");\ndocument.body.classList.remove(\"bg-warning\");\ndocument.body.classList.remove(\"bg-black\");\ndocument.body.classList.remove(\"bg-white\");\n}\n  return (\n    <>\n    <Router>\n    <Navbar title=\"TextUtil\" aboutText=\"About\" mode={mode} toggleMode={toggleMode}/>\n    <div style={{height:50+'px'}}>\n    <Alert Alert={alert}/>\n    </div>\n    <Switch>\n          <Route path=\"/about\">\n          <div className=\"container my-3\">\n          <About mode={mode}/>\n          </div>\n\n          </Route>\n         \n          <Route path=\"/\">\n          <div className=\"container my-3\">\n          <TextForm showAlert={showAlert} heading=\"Enter text to Analyze\" mode={mode}/>\n          </div>\n          </Route>\n        </Switch>\n    </Router>\n    \n   \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}